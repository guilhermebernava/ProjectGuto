@using Domain.Entities
@using Domain.Enums
@using Domain.Repositories
@using Project.Components.Pages.AdicionarConteudo;
@using System.ComponentModel.DataAnnotations
@rendermode InteractiveServer

@page "/adicionarConteudo"
<h3>Adicionar Novo Conteúdo</h3>

@if (error.Length > 0)
{
    <h1>@error</h1>
}

@if (saved)
{
    <h1>Salvo com sucesso!!!</h1>
}

<EditForm Model="@novoConteudo" OnValidSubmit="HandleSubmit" FormName="adicionarConteudoForm">

    <label for="CodigoDeBarra">Código de Barra:</label>
    <InputText id="CodigoDeBarra" @bind-Value="novoConteudo.CodigoDeBarra"></InputText>

    <label for="Titulo">Título:</label>
    <InputText id="Titulo" @bind-Value="novoConteudo.Titulo" />

    <label for="Capa">Capa:</label>
    <InputText id="Capa" @bind-Value="@novoConteudo.Capa" />

    <label for="Diretor">Diretor:</label>
    <InputText id="Diretor" @bind-Value="@novoConteudo.Diretor" />

    <label for="Preco">Preço:</label>
    <InputNumber id="Preco" @bind-Value="@novoConteudo.Preco" />

    <label for="ValorCusto">Valor de Custo:</label>
    <InputNumber id="ValorCusto" @bind-Value="@novoConteudo.ValorCusto" />

    <label for="Ano">Ano:</label>
    <InputNumber id="Ano" @bind-Value="@novoConteudo.Ano" />

    <label for="DataAdquirido">Data Adiquirido:</label>
    <InputDate id="DataAdquirido" @bind-Value="@novoConteudo.DataAdquirido" />

    <label for="Tipo">Tipo:</label>
    <InputSelect id="Tipo" @bind-Value="@novoConteudo.Tipo">
        @foreach (var tipo in Enum.GetValues(typeof(EFilmeTipo)))
        {
            <option value="@tipo">@tipo.ToString()</option>
        }
    </InputSelect>

    <label for="Situacao">Situacao:</label>
    <InputSelect id="Situacao" @bind-Value="@novoConteudo.Situacao">
        @foreach (var situacao in Enum.GetValues(typeof(ESituacao)))
        {
            <option value="@situacao">@situacao.ToString()</option>
        }
    </InputSelect>

    <select multiple="multiple" @onchange="AdicionarGenero">
        @foreach (var genero in _generos)
        {
            <option value="@genero.Nome">@genero.Nome</option>
        }
    </select>

    <select multiple="multiple" @onchange="AdicionarArtista">
        @foreach (var artista in _artistas)
        {
            <option value="@artista.Nome">@artista.Nome</option>
        }
    </select>


    <button type="submit">Salvar</button>
</EditForm>

@code {
    private string error = "";
    private bool saved = false;
    private List<Artista> _artistas = new();
    private List<Genero> _generos = new();
    public Conteudo novoConteudo = new();

    private AdicionarConteudoController adicionarConteudoController;

    [Inject]
    private IConteudoRepository _conteudoRepository { get; set; }
    [Inject]
    private IGeneroRepository _generoRepository { get; set; }
    [Inject]
    private IArtistaRepository _artistaRepository { get; set; }

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        adicionarConteudoController = new AdicionarConteudoController(_conteudoRepository);
        _artistas = await _artistaRepository.GetAllAsync();
        _generos = await _generoRepository.GetAllAsync();
    }



    private void AdicionarGenero(ChangeEventArgs args)
    {
        var generosSelecionadosArray = args.Value as IEnumerable<string>;

        if (generosSelecionadosArray == null) return;
        if (generosSelecionadosArray.Count() < 1) return;
        if (novoConteudo.Generos == null) novoConteudo.Generos = new();

        foreach (var genero in _generos)
        {
            if (generosSelecionadosArray.Contains(genero.Nome))
            {
                if (novoConteudo.Generos.Any(_ => _.Nome == genero.Nome)) continue;
                novoConteudo.Generos.Add(genero);
            }
        }
    }


    private void AdicionarArtista(ChangeEventArgs args)
    {
        var artistasSelecionadosArray = args.Value as IEnumerable<string>;

        if (artistasSelecionadosArray == null) return;
        if (artistasSelecionadosArray.Count() < 1) return;
        if (novoConteudo.Artistas == null) novoConteudo.Artistas = new();

        foreach (var genero in _artistas)
        {
            if (artistasSelecionadosArray.Contains(genero.Nome))
            {
                if (novoConteudo.Artistas.Any(_ => _.Nome == genero.Nome)) continue;
                novoConteudo.Artistas.Add(genero);
            }
        }
    }


    private async Task HandleSubmit()
    {
        var sucess = await adicionarConteudoController.AdicionarConteudo(novoConteudo);
        if (!sucess)
        {
            error = "NOT SAVED CONTEUDO";
            saved = false;
            novoConteudo = new();
            return;
        }

        error = "";
        saved = true;
        novoConteudo = new();
    }
}